// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: IAM/AsyncAPI/oauth.yaml (0.1.0)

syntax = "proto3";

package accelbyte.iam.oauth.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.IAM.Oauth";
option go_package = "accelbyte.net/iam/oauth";
option java_multiple_files = true;
option java_package = "net.accelbyte.iam.oauth";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/oauth
message Oauth {
    string clientId = 1;
    string responseType = 2;
    string platformId = 3;
}

// path: #/components/schemas/oauthThirdParty
message OauthThirdParty {
    string platformId = 1;
}

// path: #/components/messages/oauthRequestAuthorized/payload/properties/payload
message AnonymousSchema1 {
    Oauth oauth = 1;
}

// path: #/components/messages/oauthRequestAuthorized/payload
message OauthRequestAuthorized {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/oauthTokenGenerated/payload/properties/payload
message AnonymousSchema2 {
    Oauth oauth = 1;
}

// path: #/components/messages/oauthTokenGenerated/payload
message OauthTokenGenerated {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/oauthTokenRevoked/payload/properties/payload
message AnonymousSchema3 {
    Oauth oauth = 1;
}

// path: #/components/messages/oauthTokenRevoked/payload
message OauthTokenRevoked {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/oauthThirdPartyRequestAuthorized/payload/properties/payload
message AnonymousSchema4 {
    Oauth oauth = 1;
    OauthThirdParty oauthThirdParty = 2;
}

// path: #/components/messages/oauthThirdPartyRequestAuthorized/payload
message OauthThirdPartyRequestAuthorized {
    AnonymousSchema4 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/oauthThirdPartyTokenGenerated/payload/properties/payload
message AnonymousSchema5 {
    Oauth oauth = 1;
    OauthThirdParty oauthThirdParty = 2;
}

// path: #/components/messages/oauthThirdPartyTokenGenerated/payload
message OauthThirdPartyTokenGenerated {
    AnonymousSchema5 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/oauthRequestAuthorized
message OauthRequestAuthorizedMessage {
    OauthRequestAuthorized payload = 1;
}

// path: #/components/messages/oauthTokenGenerated
message OauthTokenGeneratedMessage {
    OauthTokenGenerated payload = 1;
}

// path: #/components/messages/oauthTokenRevoked
message OauthTokenRevokedMessage {
    OauthTokenRevoked payload = 1;
}

// path: #/components/messages/oauthThirdPartyRequestAuthorized
message OauthThirdPartyRequestAuthorizedMessage {
    OauthThirdPartyRequestAuthorized payload = 1;
}

// path: #/components/messages/oauthThirdPartyTokenGenerated
message OauthThirdPartyTokenGeneratedMessage {
    OauthThirdPartyTokenGenerated payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/oauthToken/publish/message
message OauthTokenPublish {
    oneof payload {
        OauthTokenGeneratedMessage variant0 = 1;
        OauthTokenRevokedMessage variant1 = 2;
    }
}


// --- service ---


// Publishes a message to the Oauth Request channel. (oauthRequest OauthRequestAuthorized)
service OauthRequestOauthRequestAuthorizedService {
    rpc OnMessage(OauthRequestAuthorized) returns (google.protobuf.Empty);
}

// Publishes a OauthTokenGenerated to the Oauth Token channel. (oneOf variant) (oauthToken OauthTokenGenerated)
service OauthTokenOauthTokenGeneratedService {
    rpc OnMessage(OauthTokenGenerated) returns (google.protobuf.Empty);
}

// Publishes a OauthTokenRevoked to the Oauth Token channel. (oneOf variant) (oauthToken OauthTokenRevoked)
service OauthTokenOauthTokenRevokedService {
    rpc OnMessage(OauthTokenRevoked) returns (google.protobuf.Empty);
}

// Publishes a message to the Oauth Third Party Request channel. (oauthThirdPartyRequest OauthThirdPartyRequestAuthorized)
service OauthThirdPartyRequestOauthThirdPartyRequestAuthorizedService {
    rpc OnMessage(OauthThirdPartyRequestAuthorized) returns (google.protobuf.Empty);
}

// Publishes a message to the Oauth Third Party Token channel. (oauthThirdPartyToken OauthThirdPartyTokenGenerated)
service OauthThirdPartyTokenOauthThirdPartyTokenGeneratedService {
    rpc OnMessage(OauthThirdPartyTokenGenerated) returns (google.protobuf.Empty);
}