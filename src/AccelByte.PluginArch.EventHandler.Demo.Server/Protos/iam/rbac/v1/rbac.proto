// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: IAM/AsyncAPI/rbac.yaml (0.1.0)

syntax = "proto3";

package accelbyte.iam.rbac.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.IAM.Rbac";
option go_package = "accelbyte.net/iam/rbac";
option java_multiple_files = true;
option java_package = "net.accelbyte.iam.rbac";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/permissions
message Permissions {
    string resoure = 1;
    string action = 2;
    int64 schedAction = 3;
    string schedCron = 4;
    repeated string schedRange = 5;
}

// path: #/components/schemas/role
message Role {
    string roleId = 1;
    string name = 2;
    bool admin = 3;
    bool roleIsWildcard = 4;
}

// path: #/components/schemas/roleManager
message RoleManager {
    string userId = 1;
    string namespace = 2;
    string displayName = 3;
}

// path: #/components/schemas/roleMember
message RoleMember {
    string userId = 1;
    string namespace = 2;
    string displayName = 3;
}

// path: #/components/messages/roleCreated/payload/properties/payload
message AnonymousSchema1 {
    Role role = 1;
}

// path: #/components/messages/roleCreated/payload
message RoleCreated {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleDeleted/payload/properties/payload
message AnonymousSchema2 {
    Role role = 1;
}

// path: #/components/messages/roleDeleted/payload
message RoleDeleted {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleUpdated/payload/properties/payload
message AnonymousSchema3 {
    Role role = 1;
}

// path: #/components/messages/roleUpdated/payload
message RoleUpdated {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/rolePermissionCreated/payload/properties/payload
message AnonymousSchema4 {
    Role role = 1;
    repeated Permissions permissions = 2;
}

// path: #/components/messages/rolePermissionCreated/payload
message RolePermissionCreated {
    AnonymousSchema4 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/rolePermissionDeleted/payload/properties/payload
message AnonymousSchema5 {
    Role role = 1;
    repeated Permissions permissions = 2;
}

// path: #/components/messages/rolePermissionDeleted/payload
message RolePermissionDeleted {
    AnonymousSchema5 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/rolePermissionUpdated/payload/properties/payload
message AnonymousSchema6 {
    Role role = 1;
    repeated Permissions permissions = 2;
}

// path: #/components/messages/rolePermissionUpdated/payload
message RolePermissionUpdated {
    AnonymousSchema6 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleManagerCreated/payload/properties/payload
message AnonymousSchema7 {
    Role role = 1;
    repeated RoleManager roleManager = 2;
}

// path: #/components/messages/roleManagerCreated/payload
message RoleManagerCreated {
    AnonymousSchema7 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleManagerDeleted/payload/properties/payload
message AnonymousSchema8 {
    Role role = 1;
    repeated RoleManager roleManager = 2;
}

// path: #/components/messages/roleManagerDeleted/payload
message RoleManagerDeleted {
    AnonymousSchema8 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleMemberCreated/payload/properties/payload
message AnonymousSchema9 {
    Role role = 1;
    repeated RoleMember roleMember = 2;
}

// path: #/components/messages/roleMemberCreated/payload
message RoleMemberCreated {
    AnonymousSchema9 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/roleMemberDeleted/payload/properties/payload
message AnonymousSchema10 {
    Role role = 1;
    repeated RoleMember roleMember = 2;
}

// path: #/components/messages/roleMemberDeleted/payload
message RoleMemberDeleted {
    AnonymousSchema10 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/roleCreated
message RoleCreatedMessage {
    RoleCreated payload = 1;
}

// path: #/components/messages/roleDeleted
message RoleDeletedMessage {
    RoleDeleted payload = 1;
}

// path: #/components/messages/roleUpdated
message RoleUpdatedMessage {
    RoleUpdated payload = 1;
}

// path: #/components/messages/rolePermissionCreated
message RolePermissionCreatedMessage {
    RolePermissionCreated payload = 1;
}

// path: #/components/messages/rolePermissionDeleted
message RolePermissionDeletedMessage {
    RolePermissionDeleted payload = 1;
}

// path: #/components/messages/rolePermissionUpdated
message RolePermissionUpdatedMessage {
    RolePermissionUpdated payload = 1;
}

// path: #/components/messages/roleManagerCreated
message RoleManagerCreatedMessage {
    RoleManagerCreated payload = 1;
}

// path: #/components/messages/roleManagerDeleted
message RoleManagerDeletedMessage {
    RoleManagerDeleted payload = 1;
}

// path: #/components/messages/roleMemberCreated
message RoleMemberCreatedMessage {
    RoleMemberCreated payload = 1;
}

// path: #/components/messages/roleMemberDeleted
message RoleMemberDeletedMessage {
    RoleMemberDeleted payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/role/publish/message
message RolePublish {
    oneof payload {
        RoleCreated variant0 = 1;
        RoleDeleted variant1 = 2;
        RoleUpdated variant2 = 3;
    }
}

// path: #/channels/rolePermissions/publish/message
message RolePermissionsPublish {
    oneof payload {
        RolePermissionCreated variant0 = 1;
        RolePermissionDeleted variant1 = 2;
        RolePermissionUpdated variant2 = 3;
    }
}

// path: #/channels/roleManager/publish/message
message RoleManagerPublish {
    oneof payload {
        RoleManagerCreated variant0 = 1;
        RoleManagerDeleted variant1 = 2;
    }
}

// path: #/channels/roleMember/publish/message
message RoleMemberPublish {
    oneof payload {
        RoleMemberCreated variant0 = 1;
        RoleMemberDeleted variant1 = 2;
    }
}


// --- service ---


// Publishes a RoleCreated to the Role channel. (oneOf variant) (role RoleCreated)
service RoleRoleCreatedService {
    rpc OnMessage(RoleCreated) returns (google.protobuf.Empty);
}

// Publishes a RoleDeleted to the Role channel. (oneOf variant) (role RoleDeleted)
service RoleRoleDeletedService {
    rpc OnMessage(RoleDeleted) returns (google.protobuf.Empty);
}

// Publishes a RoleUpdated to the Role channel. (oneOf variant) (role RoleUpdated)
service RoleRoleUpdatedService {
    rpc OnMessage(RoleUpdated) returns (google.protobuf.Empty);
}

// Publishes a RolePermissionCreated to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionCreated)
service RolePermissionsRolePermissionCreatedService {
    rpc OnMessage(RolePermissionCreated) returns (google.protobuf.Empty);
}

// Publishes a RolePermissionDeleted to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionDeleted)
service RolePermissionsRolePermissionDeletedService {
    rpc OnMessage(RolePermissionDeleted) returns (google.protobuf.Empty);
}

// Publishes a RolePermissionUpdated to the Role Permissions channel. (oneOf variant) (rolePermissions RolePermissionUpdated)
service RolePermissionsRolePermissionUpdatedService {
    rpc OnMessage(RolePermissionUpdated) returns (google.protobuf.Empty);
}

// Publishes a RoleManagerCreated to the Role Manager channel. (oneOf variant) (roleManager RoleManagerCreated)
service RoleManagerRoleManagerCreatedService {
    rpc OnMessage(RoleManagerCreated) returns (google.protobuf.Empty);
}

// Publishes a RoleManagerDeleted to the Role Manager channel. (oneOf variant) (roleManager RoleManagerDeleted)
service RoleManagerRoleManagerDeletedService {
    rpc OnMessage(RoleManagerDeleted) returns (google.protobuf.Empty);
}

// Publishes a RoleMemberCreated to the Role Member channel. (oneOf variant) (roleMember RoleMemberCreated)
service RoleMemberRoleMemberCreatedService {
    rpc OnMessage(RoleMemberCreated) returns (google.protobuf.Empty);
}

// Publishes a RoleMemberDeleted to the Role Member channel. (oneOf variant) (roleMember RoleMemberDeleted)
service RoleMemberRoleMemberDeletedService {
    rpc OnMessage(RoleMemberDeleted) returns (google.protobuf.Empty);
}
